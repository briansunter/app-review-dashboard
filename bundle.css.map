{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/Home.svelte",
    "../src/AutoComplete.svelte",
    "../src/Dashboard.svelte",
    "../src/ReviewTable.svelte"
  ],
  "sourcesContent": [
    "<script>\n import range from 'lodash/range';\n import meanBy from 'lodash/meanBy';\n import WordCloud from './WordCloud.svelte';\n import AutoComplete from './AutoComplete.svelte';\n import Dashboard from './Dashboard.svelte';\n import ReviewTable from './ReviewTable.svelte';\n\n import { getApp, getReviews, formatReviews, reviewsSentiment } from './reviews';\n\n import 'material-dashboard/assets/css/material-dashboard.css';\n import 'material-dashboard/assets/css/bootstrap.min.css';\n import './main.css';\n\n const defaultAppId = 284882215;\n export let appId = 284882215;\n\n $: currentApp = getApp(appId || defaultAppId);\n\n $: appReviews = currentApp.then(ca => getReviews({appId: ca.id}));\n\n let gramOptions = range(1,6).map(x => x.toString());\n\n let gramOptionsValue = \"2\"\n\n $: formattedReviews = appReviews\n   .then(r=> formatReviews({reviews:r, nGrams: parseInt(gramOptionsValue)}))\n\n $: currentAppReviewsSentiment = appReviews\n   .then(reviews=>meanBy(reviews.map(reviewsSentiment),'score'));\n</script>\n\n<style>\n .navbar-brand {\n   font-size: 40pt;\n   margin-top: 20pt;\n   margin-bottom: 20pt;\n }\n\n .input-group {\n   padding: 5pt;\n   background-color: white;\n }\n\n .gramSelect {\n   padding: 5pt;\n   padding-left:10pt;\n   padding-right:10pt;\n }\n\n .gramSelectLabel {\n   padding: 5pt;\n }\n\n .cloud {\n   min-height:90vh;\n   min-width:80vh;\n }\n\n .github-corner svg {\n     z-index: 10;\n }\n\n .github-corner:hover .octo-arm{\n     animation:octocat-wave 560ms ease-in-out\n }\n\n @keyframes octocat-wave{\n     0%,100%{transform:rotate(0)}\n     20%,60%{transform:rotate(-25deg)}\n     40%,80%{transform:rotate(10deg)}}\n @media (max-width:500px){\n     .github-corner:hover .octo-arm{animation:none}\n     .github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}\n</style>\n\n<a href=\"https://github.com/briansunter/app-review-dashboard\" class=\"github-corner\" aria-label=\"View source on GitHub\"><svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" style=\"fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;\" aria-hidden=\"true\"><path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path><path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" style=\"transform-origin: 130px 106px;\" class=\"octo-arm\"></path><path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" class=\"octo-body\"></path></svg></a>\n\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"card\">\n        <div class=\"card-header card-header-primary\">\n          {#await currentApp}\n          <h2 class=\"card-title\">Loading... </h2>\n          {:then value}\n          <h2 class=\"card-title\">{ value.name }</h2>\n          {/await}\n          <h3 class=\"card-category\">A dashboard for your iOS App Store reviews.</h3>\n        </div>\n        <form class=\"navbar-form\">\n          <div class=\"input-group mb-3 flex-nowrap\">\n            <AutoComplete />\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n  {#await Promise.all([currentApp,currentAppReviewsSentiment])}\n  <Dashboard />\n  {:then val}\n  <Dashboard currentApp={val[0]} currentAppReviewsSentiment={val[1]} />\n  {/await}\n</div>\n\n<div class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card\">\n          <div class=\"card-header card-header-primary\">\n            <h2 class=\"card-title\">Word Cloud</h2>\n            <h3 class=\"card-category\">A word cloud made from most frequent words in app reviews.</h3>\n            <div class=\"input-group-append\" >\n              <label class=\"gramSelectLabel\" for=\"gramSelect\"> nGrams </label>\n              <select class=\"gramSelect\" bind:value={gramOptionsValue}>\n                {#each gramOptions as go}\n                <option value={go}>{go}</option>\n                {/each}\n              </select>\n            </div>\n          </div>\n          <div class=\"card-body\">\n            {#await formattedReviews}\n            <div class=\"container cloud\">\n              <p>Loading Word Cloud...</p>\n            </div>\n            {:then value}\n            <WordCloud words={value} />\n            {:catch error}\n            <p>Something went wrong: {error.message}</p>\n            {/await}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n{#await appReviews}\n<div class=\"container\">\n  <ReviewTable />\n</div>\n{:then reviews}\n<ReviewTable reviews={reviews} />\n{:catch error}\n<p>Something went wrong: {error.message}</p>\n{/await}\n",
    "<script>\n import autocomplete from 'autocompleter';\n import values from 'lodash/values';\n import groupBy from 'lodash/groupBy';\n import mapValues from 'lodash/mapValues';\n import { onMount } from 'svelte';\n import 'autocompleter/autocomplete.css';\n import { navigate } from \"svelte-routing\";\n\n let apps = {};\n export let selectedApp = () => null;\n\n onMount(() => {\n   var input = document.getElementById(\"appSearch\");\n   autocomplete({\n     input: input,\n     fetch: async function(text, update) {\n       text = text.toLowerCase();\n       let formattedText = encodeURI(text);\n\n       let res = await fetch(`https://cors-anywhere.herokuapp.com/https://itunes.apple.com/search?term=${formattedText}&entity=software`);\n       let appsResponse = await res.json();\n\n       let formattedApps = appsResponse.results.map(a=>\n           ({id: a.trackId,\n             name:a.trackName,\n             link: a.trackViewUrl,\n             currentVersionRatingCount: a.userRatingCountForCurrentVersion,\n             currentVersionRating: a.averageUserRatingForCurrentVersion,\n             appRating: a.averageUserRating,\n             appRatingCount: a.userRatingCount,\n             appPrice:a.formattedPrice}));\n\n       let labelApps = values(formattedApps).map(a =>\n           ({value: a.id,\n             label: a.name,\n             appRatingCount:a.appRatingCount}));\n\n       update(labelApps);\n     },\n     onSelect: function(item) {\n       input.value = item.label;\n       navigate(`${item.value}`);\n     }\n   });\n });\n</script>\n<style>\n\n .autoComplete_results_list li {\nfont-size: 2rem;\n }\n .appSearch {\n   width: 100%;\n   padding: 10pt;\n }\n\n</style>\n\n<input id=\"appSearch\" type=\"text\" value=\"\" class=\"appSearch\" placeholder=\"Search for an App...\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\">\n",
    "<script>\n export let currentApp;\n export let currentAppReviewsSentiment;\n</script>\n<style>\n .card-stats {\n   height: 12vmax;\n }\n</style>\n\n<div class=\"row\">\n  <div class=\"col-lg-3 col-md-6 col-sm-6\">\n    <div class=\"card card-stats\">\n      <div class=\"card-header card-header-success card-header-icon\">\n        <div class=\"card-icon\">\n          <i class=\"material-icons\">star</i>\n        </div>\n        <p class=\"card-category\">Current Version</p>\n        {#if currentApp}\n        <h3 class=\"card-title\">{currentApp.currentVersionRating}\n          <small>Stars</small>\n        </h3>\n        {:else}\n        <p>Loading...</p>\n        {/if}\n      </div>\n      <div class=\"card-footer\">\n        {#if currentApp}\n        <p class=\"card-category\"> Out of {currentApp.currentVersionRatingCount} Reviews. </p>\n        {:else}\n        <p>Loading...</p>\n        {/if}\n      </div>\n    </div>\n  </div>\n  <div class=\"col-lg-3 col-md-6 col-sm-6\">\n    <div class=\"card card-stats\">\n      <div class=\"card-header card-header-warning card-header-icon\">\n        <div class=\"card-icon\">\n          <i class=\"material-icons\">rate_review</i>\n        </div>\n        <p class=\"card-category\">Average Rating</p>\n        {#if currentApp}\n        <h3 class=\"card-title\">{currentApp.appRating}\n          <small>Stars</small>\n        </h3>\n        {:else}\n        <p>Loading...</p>\n        {/if}\n      </div>\n      <div class=\"card-footer\">\n        {#if currentApp}\n        <p class=\"card-category\"> Out of {currentApp.appRatingCount} Reviews. </p>\n        {:else }\n        <p>Loading...</p>\n        {/if}\n      </div>\n    </div>\n  </div>\n  <div class=\"col-lg-3 col-md-6 col-sm-6\">\n    <div class=\"card card-stats\">\n      <div class=\"card-header card-header-success card-header-icon\">\n        <div class=\"card-icon\">\n          <i class=\"material-icons\">sentiment_satisfied</i>\n        </div>\n        <p class=\"card-category\">Sentiment</p>\n\n        {#if currentAppReviewsSentiment}\n        <h3 class=\"card-title\">{currentAppReviewsSentiment.toString().substring(0,6)}</h3>\n        {:else}\n        <h3 class=\"card-category\">Loading...</h3>\n        {/if}\n      </div>\n      <div class=\"card-footer\">\n        {#if currentApp}\n        <p class=\"card-category\"> Out of {currentApp.appRatingCount} Reviews. </p>\n        {:else}\n        <p>Loading...</p>\n        {/if}\n      </div>\n    </div>\n  </div>\n  <div class=\"col-lg-3 col-md-6 col-sm-6\">\n    <div class=\"card card-stats\">\n      <div class=\"card-header card-header-success card-header-icon\">\n        <div class=\"card-icon\">\n          <i class=\"material-icons\">store</i>\n        </div>\n        {#if currentApp}\n        <p class=\"card-category\">{currentApp.name.substring(0,20)}</p>\n        <h3 class=\"card-title\">{currentApp.appPrice}</h3>\n        {:else }\n        <p>Loading...</p>\n        {/if}\n      </div>\n      <div class=\"card-footer\">\n        {#if currentApp}\n        <a class=\"card-category\" href={currentApp.link}>Go to store</a>\n        {:else}\n        <p>Loading...</p>\n        {/if}\n      </div>\n    </div>\n  </div>\n</div>\n",
    "<script>\n import Tabulator from 'tabulator-tables';\n import  'tabulator-tables/dist/css/tabulator.min.css'\n import { onMount } from 'svelte';\n import Mark from 'mark.js';\n\n let table;\n let mark;\n\n onMount(async () => {\n   const tableOptions = {\n     data:reviews,\n     height:window.screen.height, tooltips: true,\n     layout:\"fitColumns\",\n     columns:[\n       {title:\"Title\",width:150, formatter:'textarea', field:'title'},\n       {title:\"Rating\",width:75,align:'center', field:'rating'},\n       {title:\"Stars\", field:\"rating\", formatter:\"star\", align:\"center\", width:100,field:'rating'},\n       {title:\"Sentiment\",width:100, align:'center',field: 'sentiment'},\n       {title:\"Version\",width:100, align:'center', field: 'version'},\n       {title:\"Content\", formatter:'textarea', field:'content',minWidth:300}]}\n\n   table = new Tabulator(\"#items\",tableOptions);\n });\n\n mark = new Mark(\"div.tabulator-cell\");\n\n $: if(table){\n   table.setData(reviews);\n }\n $: if(table) {\n   table.setFilter(\"content\", \"like\", tableSearch);\n }\n\n $: {\n     if (tableSearch.length < 2) {\n         mark.unmark();\n     } else {\n         mark.mark(tableSearch,{accuracy: 'complementary'});\n     }\n }\n\n export let reviews = [];\n\n let tableSearch = \"\";\n</script>\n\n<style>\n mark{\n   background: orange;\n   color: black;\n }\n .review-search {\n   padding: 10pt;\n   font-size:1.5em;\n   margin: 5pt;\n }\n</style>\n<div class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card\">\n          <div class=\"card-header card-header-primary\">\n            <h2 class=\"card-title\">List</h2>\n            <h3 class=\"card-category\">Searchable and sortable reviews</h3>\n            <input class=\"review-search\" bind:value={tableSearch} placeholder=\"Search Reviews...\" >\n          </div>\n          <div class=\"card-body\">\n            <div class=\"table-responsive\">\n              <table class=\"table sortable table-striped table-border\" id=\"items\">\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAuCC,YAAY,eAAC,CAAC,AACZ,OAAO,CAAE,GAAG,CACZ,gBAAgB,CAAE,KAAK,AACzB,CAAC,AAED,WAAW,eAAC,CAAC,AACX,OAAO,CAAE,GAAG,CACZ,aAAa,IAAI,CACjB,cAAc,IAAI,AACpB,CAAC,AAED,gBAAgB,eAAC,CAAC,AAChB,OAAO,CAAE,GAAG,AACd,CAAC,AAED,MAAM,eAAC,CAAC,AACN,WAAW,IAAI,CACf,UAAU,IAAI,AAChB,CAAC,AAED,6BAAc,CAAC,GAAG,eAAC,CAAC,AAChB,OAAO,CAAE,EAAE,AACf,CAAC,AAED,6BAAc,MAAM,CAAC,wBAAS,CAAC,AAC3B,UAAU,2BAAY,CAAC,KAAK,CAAC,WAAW;CAC5C,CAAC,AAED,WAAW,2BAAY,CAAC,AACpB,EAAE,CAAC,IAAI,CAAC,UAAU,OAAO,CAAC,CAAC,CAAC,AAC5B,GAAG,CAAC,GAAG,CAAC,UAAU,OAAO,MAAM,CAAC,CAAC,AACjC,GAAG,CAAC,GAAG,CAAC,UAAU,OAAO,KAAK,CAAC,CAAC,CAAC,AACrC,MAAM,AAAC,WAAW,KAAK,CAAC,CAAC,AACrB,6BAAc,MAAM,CAAC,wBAAS,CAAC,UAAU,IAAI,CAAC,AAC9C,6BAAc,CAAC,wBAAS,CAAC,UAAU,2BAAY,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;ACrBvE,UAAU,eAAC,CAAC,AACV,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,AACf,CAAC;AClDD,WAAW,cAAC,CAAC,AACX,MAAM,CAAE,MAAM,AAChB,CAAC;AC6CD,cAAc,eAAC,CAAC,AACd,OAAO,CAAE,IAAI,CACb,UAAU,KAAK,CACf,MAAM,CAAE,GAAG,AACb,CAAC"
}